Web为3.0 使用core_rt库
Jstl foreach items不能有空格
getResourceAsStream 使用类.class

linux jdk sudo rpm -ivh jdk-7u80-linux-x64.rpm source /etc/profile
tomcat 解压 修改conf/server.xml URIEncoding
maven 解压 source /etc/profile
vsftpd sudo yum -y install vsftpd  
sudo useradd ftpuser -d /ftpfile/ -s /sbin/nologin 
sudo chown -R ftpuser.ftpuser /ftpfile/
sudo passwd ftpuser
ftpd_banner=Welcome to gloria FTP service.

local_root=/ftpfile
anno_root=/ftpfile
use_localtime=yes
chroot_list_enable=YES
# (default follows)
chroot_list_file=/etc/vsftpd/chroot_list

nginx sudo yum install gcc-c++
sudo yum install pcre pcre-devel
sudo yum install zlib zlib-devel
sudo yum install openssl openssl-devel

git sudo yum -y install zlib-devel openssl-devel cpio expat-devel gettext-devle curl-devel perl-ExtUtils-CBuilder perl-ExtUtils-MakeMaker
sudo make prefix=/usr/local all

打war包
mvn package -Dmaven.test.skip=true   netstat -tunlp | grep 8000 查看端口占用
mvn install

linux redis未授权漏洞 勒索
【加固建议】
1. 禁止Redis服务对公网开放，可通过修改redis.conf配置文件中的"#bind 127.0.0.1" ，去掉前面的"#"即可（Redis本来就是作为内存数据库，只要监听在本机即可）；
2. 设置密码访问认证，可通过修改redis.conf配置文件中的"requirepass" 设置复杂密码 （需要重启Redis服务才能生效）；
3. 对访问源IP进行访问控制，可在防火墙限定指定源ip才可以连接Redis服务器；
4. 修改Redis默认端口，将默认的6379端口修改为其他端口；
5. 禁用config指令避免恶意操作，在Redis配置文件redis.conf中配置rename-command项"RENAME_CONFIG"，这样即使存在未授权访问，也能够给攻击者使用config 指令加大难度；
6. Redis使用普通用户权限，禁止使用 root 权限启动Redis 服务，这样可以保证在存在漏洞的情况下攻击者也只能获取到普通用户权限，无法获取root权限；

ShardedJedisPool 配置多个redis密码时 报错  在debug未进入ShardedJedisPool就应该反应过来 导入springsession配置未配置密码

自连接 
SELECT  || 连接字符串
    (e.first_name || '  ' || e.last_name) employee,
    e.job_title,
    (m.first_name || '  ' || m.last_name) manager    
FROM
    employees e
LEFT JOIN employees m ON
    m.employee_id = e.manager_id
ORDER BY
    manager;
	
SpringBoot
mvn XXX.jar:run
java jar XXX.jar

JSON.stringify("{'username':'json'}") restful表单参数上传 Bean要生成带参构造函数

shiro  根据config内容自定义的密码比较进行对比